{"version":3,"file":"static/js/873.1ebf8fa7.chunk.js","mappings":"kMACA,EAAuB,qBAAvB,EAA2D,6BAA3D,EAAqG,2BAArG,EAAyI,uB,SCkBzI,EAhBe,SAACA,GAEd,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACM,SAAC,KAAD,CAASC,GAAIF,EAAb,UACE,iBAAKG,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBAAKC,IAAKN,EAAMO,OAAQC,IAAI,cAEhC,gBAAKJ,UAAS,UAAKC,EAAL,YAAyBL,EAAMS,OAASJ,EAAe,IAArE,SAA4EL,EAAMU,aCX5F,EAA8B,6BAA9B,EAAqE,yBAArE,EAAyG,0BAAzG,EAAoJ,gCAApJ,EAAyM,oCAAzM,EAAgQ,kCAAhQ,EAAkT,+BCAlT,KCOA,EANgB,SAACV,GACf,OACM,gBAAKI,UAAWC,EAAAA,QAAhB,SAAgCL,EAAMW,W,UCiDxCC,EAAiB,SAACZ,GACtB,OACE,SAAC,KAAD,CACEa,cAAe,CAAEC,YAAa,IAC9BC,SAAU,SAAAC,GACR,IAAMC,EAAS,GAIf,MAH2B,KAAvBD,EAAOF,cACTG,EAAOH,YAAc,8BAEhBG,GAETC,SAAU,SAACF,EAAD,GAA+B,EAApBG,cAEjBnB,EAAMkB,SAASF,IAXrB,UAiBE,UAAC,KAAD,CACEZ,UAAWC,EADb,WAGE,iBAAKD,UAAWC,EAAhB,WACE,SAAC,KAAD,CACEK,KAAK,cACLR,GAAG,cACHkB,UAAU,WACVC,YAAa,kBAKf,SAAC,KAAD,CAAcX,KAAK,cAAcU,UAAU,YAE7C,gBAAKhB,UAAWC,EAAhB,UACE,mBAEEiB,KAAK,SAFP,iCAWV,EA3FgB,SAACtB,GAEf,IAAIuB,EAAQvB,EAAMwB,YAEdC,EAAcF,EAAME,YACpBC,EAAeH,EAAMG,aAErBC,EAAkBF,EAAYG,KAAK,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAQ3B,GAAI2B,EAAO3B,GAAIQ,KAAMmB,EAAOnB,KAAMH,OAAQsB,EAAOtB,OAAQE,OAAQoB,EAAOpB,QAAaoB,EAAO3B,OACjJ4B,EAAmBJ,EAAaE,KAAK,SAAAjB,GAAO,OAAI,SAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQT,OAkBpG,OACE,iBAAKE,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGsB,KAEH,iBAAKvB,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGyB,KAGH,gBAAM1B,UAAWC,EAAjB,UACE,SAACO,EAAD,CAAgBM,SAhBJ,SAACF,GAEnBhB,EAAM+B,WAAWf,EAAOF,yB,UCoB5B,GAAekB,E,QAAAA,KACbC,EAAAA,EAAAA,KAxBsB,SAACV,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAII,SAACU,GAC1B,MAAO,CACLH,WAAY,SAACjB,GACXoB,GAASC,EAAAA,EAAAA,IAAwBrB,KAGnCsB,cAAe,SAACC,GACdH,GAASI,EAAAA,EAAAA,IAAkCD,SAY/CE,EAAAA,EAFF,CAGEC,I,kJClDIC,EAA6B,SAAClB,GAClC,MAAO,CACLmB,OAAQnB,EAAMoB,KAAKD,SAIVH,EAAmB,SAACK,GAAe,IAExCC,EAFuC,0IAG3C,WACE,OAAIC,KAAK9C,MAAM0C,QAER,SAACE,GAAD,UAAeE,KAAK9C,SAFG,SAAC,KAAD,CAAUG,GAAG,eAJF,GAEb4C,EAAAA,WAWhC,OAFqCd,EAAAA,EAAAA,IAAQQ,EAARR,CAAoCY","sources":["webpack://project1/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://project1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"user\":\"Dialog_user__JXP2W\",\"user__avatar\":\"Dialog_user__avatar__PoUh0\",\"user__name\":\"Dialog_user__name__fIbYI\",\"active\":\"Dialog_active__MoDwo\"};","import { NavLink } from 'react-router-dom';\r\nimport style from './Dialog.module.css'\r\n\r\nconst Dialog = (props) => {\r\n\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n        <NavLink to={path}>\r\n          <div className={style.user}>\r\n            <div className={style.user__avatar}>\r\n              <img src={props.avatar} alt=\"Avatar\" />\r\n            </div>\r\n          <div className={`${style.user__name} ${props.active ? style.active : ''}`}>{props.name}</div>\r\n          </div>\r\n        </NavLink>\r\n\r\n  );\r\n}\r\n\r\nexport default Dialog;\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogsPage\":\"Dialogs_dialogsPage__87k0f\",\"dialogs\":\"Dialogs_dialogs__SV7PE\",\"messages\":\"Dialogs_messages__u63O7\",\"messages__body\":\"Dialogs_messages__body__BO-Gb\",\"messages__textarea\":\"Dialogs_messages__textarea__HlD1+\",\"messages__footer\":\"Dialogs_messages__footer__bjrg0\",\"messages__add\":\"Dialogs_messages__add__JMvIL\"};","// extracted by mini-css-extract-plugin\nexport default {};","import style from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n        <div className={style.message}>{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport Dialog from './Dialog/Dialog';\r\nimport style from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import {Navigate } from \"react-router-dom\";\r\n// import {addMessageActionCreator, updateNewMessageTextActionCreator} from '../../redux/dialogs-reducer'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsData = state.dialogsData;\r\n  let messagesData = state.messagesData;\r\n\r\n  let dialogsElements = dialogsData.map( dialog => <Dialog id={dialog.id} name={dialog.name} avatar={dialog.avatar} active={dialog.active} key={dialog.id}/>)\r\n  let messagesElements = messagesData.map( message => <Message message={message.message} key={message.id}/>)\r\n\r\n  // let onAddMessage = () => {\r\n  //   // props.dispatch(addMessageActionCreator());\r\n  //   props.addMessage();\r\n  // };\r\n\r\n  // let onMessageChange = (event) => {\r\n  //   let text = event.target.value;\r\n  //   props.MessageChange(text);\r\n  //   // props.dispatch(updateNewMessageTextActionCreator(text));\r\n  // };\r\n\r\n  let addNewMessage = (values) => {\r\n    // alert(values.add_message);\r\n    props.addMessage(values.add_message);\r\n  }\r\n\r\n  return (\r\n    <div className={style.dialogsPage}>\r\n      <div className={style.dialogs}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={style.messages}>\r\n        <div className={style.messages__body}>\r\n          {messagesElements}\r\n        </div>\r\n\r\n        <div  className={style.messages__footer}>\r\n          <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{ add_message: ''}}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (values.add_message === '') {\r\n          errors.add_message = 'Your message dont be empty';\r\n        } \r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        // setTimeout(() => {\r\n          props.onSubmit(values);\r\n          // console.log(values.add_message);\r\n          // setSubmitting(false);\r\n        // }, 400);\r\n      }}\r\n    >\r\n      <Form \r\n        className={style.messages__footer}\r\n      >\r\n        <div className={style.messages__textarea}>\r\n          <Field \r\n            name=\"add_message\" \r\n            id=\"add_message\" \r\n            component=\"textarea\" \r\n            placeholder={\"Send message\"}\r\n            // onChange={onMessageChange} \r\n            // value={state.newMessageText}\r\n            >\r\n          </Field>\r\n          <ErrorMessage name=\"add_message\" component=\"div\" />\r\n        </div>\r\n        <div className={style.messages__add}>\r\n          <button \r\n            // onClick={onAddMessage} \r\n            type=\"submit\"\r\n            >Add message\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","// import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from '../../redux/dialogs-reducer'\r\nimport Dialogs from './Dialogs';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n//   let state = props.store.getState().dialogsPage;\r\n\r\n//   let addMessage = () => {\r\n//     props.store.dispatch(addMessageActionCreator());\r\n//   };\r\n\r\n//   let MessageChange = (text) => {\r\n//     props.store.dispatch(updateNewMessageTextActionCreator(text));\r\n//   };\r\n\r\n//   return (\r\n//     <Dialogs \r\n//       updateNewMessageText={MessageChange}\r\n//       addMessage={addMessage}\r\n//       dialogsPage={state}\r\n//     />\r\n//   );\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (add_message) => {\r\n      dispatch(addMessageActionCreator(add_message));\r\n    },\r\n\r\n    MessageChange: (text) => {\r\n      dispatch(updateNewMessageTextActionCreator(text));\r\n    }\r\n  }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default DialogsContainer;\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport {Navigate } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render () {\r\n      if(!this.props.isAuth) return <Navigate to='/login'></Navigate>\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","path","id","to","className","style","src","avatar","alt","active","name","message","AddMessageForm","initialValues","add_message","validate","values","errors","onSubmit","setSubmitting","component","placeholder","type","state","dialogsPage","dialogsData","messagesData","dialogsElements","map","dialog","messagesElements","addMessage","compose","connect","dispatch","addMessageActionCreator","MessageChange","text","updateNewMessageTextActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}